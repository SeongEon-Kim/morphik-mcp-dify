openapi: 3.0.0
info:
  title: Morphik MCP API for Dify
  description: |
    Morphik multi-modal database integration for Dify Cloud.
    Provides powerful document ingestion, retrieval, and query capabilities.
  version: 1.0.0
  contact:
    name: Morphik Support
    url: https://morphik.ai

servers:
  - url: https://your-morphik-deployment.railway.app
    description: Morphik MCP Server (Railway)
  - url: https://your-morphik-deployment.vercel.app
    description: Morphik MCP Server (Vercel)

paths:
  /health:
    get:
      summary: 서버 상태 확인
      description: Morphik MCP 서버의 상태를 확인합니다
      operationId: healthCheck
      responses:
        '200':
          description: 서버가 정상 작동 중
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time

  /mcp:
    post:
      summary: MCP 도구 실행
      description: Morphik MCP 프로토콜을 통해 다양한 도구를 실행합니다
      operationId: executeMcpTool
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/IngestTextRequest'
                - $ref: '#/components/schemas/RetrieveChunksRequest'
                - $ref: '#/components/schemas/QueryRequest'
                - $ref: '#/components/schemas/ListDocumentsRequest'
                - $ref: '#/components/schemas/GetDocumentRequest'
                - $ref: '#/components/schemas/DeleteDocumentRequest'
              discriminator:
                propertyName: method
                mapping:
                  tools/call: '#/components/schemas/ToolCallRequest'
      responses:
        '200':
          description: 성공적으로 실행됨
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IngestResponse'
                  - $ref: '#/components/schemas/RetrieveResponse'
                  - $ref: '#/components/schemas/QueryResponse'
                  - $ref: '#/components/schemas/ListDocumentsResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Base MCP Request Schema
    ToolCallRequest:
      type: object
      required:
        - jsonrpc
        - id
        - method
        - params
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          required:
            - name
            - arguments
          properties:
            name:
              type: string
              enum:
                - "ingest-text"
                - "retrieve-chunks"
                - "query"
                - "list-documents"
                - "get-document"
                - "delete-document"
            arguments:
              type: object

    # 1. 텍스트 문서 등록
    IngestTextRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          properties:
            name:
              type: string
              enum: ["ingest-text"]
            arguments:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: 저장할 텍스트 내용
                  example: "인공지능은 인간의 지능을 모방하는 기술입니다."
                filename:
                  type: string
                  description: 파일명 (선택사항)
                  example: "ai_basics.txt"
                metadata:
                  type: object
                  description: 추가 메타데이터
                  example: {"category": "technology", "author": "John Doe"}
                rules:
                  type: array
                  items:
                    type: object
                  description: 추출/처리 규칙
                useColpali:
                  type: boolean
                  description: ColPali 임베딩 모델 사용 여부
                  default: false
                folderName:
                  type: string
                  description: 폴더 범위
                endUserId:
                  type: string
                  description: 사용자 ID

    # 2. 문서 청크 검색
    RetrieveChunksRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          properties:
            name:
              type: string
              enum: ["retrieve-chunks"]
            arguments:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: 검색 쿼리
                  example: "인공지능이란 무엇인가?"
                k:
                  type: integer
                  description: 반환할 청크 수
                  default: 5
                  minimum: 1
                  maximum: 50
                minScore:
                  type: number
                  description: 최소 유사도 점수
                  default: 0.0
                  minimum: 0.0
                  maximum: 1.0
                filters:
                  type: object
                  description: 필터링 조건
                folderName:
                  type: string
                  description: 폴더 범위
                endUserId:
                  type: string
                  description: 사용자 ID

    # 3. LLM 기반 질의응답
    QueryRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          properties:
            name:
              type: string
              enum: ["query"]
            arguments:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  description: 질문
                  example: "회사의 AI 전략은 무엇인가요?"
                k:
                  type: integer
                  description: 참조할 문서 수
                  default: 5
                maxTokens:
                  type: integer
                  description: 최대 토큰 수
                  default: 1000
                temperature:
                  type: number
                  description: 생성 온도
                  default: 0.7
                  minimum: 0.0
                  maximum: 2.0
                filters:
                  type: object
                  description: 필터링 조건
                folderName:
                  type: string
                  description: 폴더 범위
                endUserId:
                  type: string
                  description: 사용자 ID

    # 4. 문서 목록 조회
    ListDocumentsRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          properties:
            name:
              type: string
              enum: ["list-documents"]
            arguments:
              type: object
              properties:
                skip:
                  type: integer
                  description: 건너뛸 문서 수
                  default: 0
                  minimum: 0
                limit:
                  type: integer
                  description: 반환할 문서 수
                  default: 10
                  minimum: 1
                  maximum: 100
                filters:
                  type: object
                  description: 필터링 조건
                folderName:
                  type: string
                  description: 폴더 범위
                endUserId:
                  type: string
                  description: 사용자 ID

    # 5. 특정 문서 조회
    GetDocumentRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          properties:
            name:
              type: string
              enum: ["get-document"]
            arguments:
              type: object
              required:
                - documentId
              properties:
                documentId:
                  type: string
                  description: 문서 ID
                  example: "doc_123456"

    # 6. 문서 삭제
    DeleteDocumentRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        method:
          type: string
          enum: ["tools/call"]
        params:
          type: object
          properties:
            name:
              type: string
              enum: ["delete-document"]
            arguments:
              type: object
              required:
                - documentId
              properties:
                documentId:
                  type: string
                  description: 삭제할 문서 ID
                  example: "doc_123456"

    # Response Schemas
    IngestResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        result:
          type: object
          properties:
            content:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["text"]
                  text:
                    type: string
                    description: 처리 결과 메시지

    RetrieveResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        result:
          type: object
          properties:
            content:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["text"]
                  text:
                    type: string
                    description: 검색된 청크들의 정보

    QueryResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        result:
          type: object
          properties:
            content:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["text"]
                  text:
                    type: string
                    description: LLM이 생성한 답변

    ListDocumentsResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        result:
          type: object
          properties:
            content:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum: ["text"]
                  text:
                    type: string
                    description: 문서 목록 정보

    ErrorResponse:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: string
        error:
          type: object
          properties:
            code:
              type: integer
              description: 오류 코드
            message:
              type: string
              description: 오류 메시지
            data:
              type: object
              description: 추가 오류 정보

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Morphik API 키를 Bearer 토큰으로 사용

security:
  - BearerAuth: []